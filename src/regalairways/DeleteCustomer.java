/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package regalairways;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Zeyad
 */
public class DeleteCustomer extends javax.swing.JFrame {

    ResultSet rs;
    Statement statement;
    Connection con;
    String EnteredPhone;
    
    /**
     * Creates new form DeleteCustomer
     */
    public DeleteCustomer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Customer Phone No.");

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(37, 37, 37)))
                .addContainerGap(179, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Delete Button
        EnteredPhone = phone.getText();
   
        try {
           
            con = new Connect().getConnection();
            statement = con.createStatement();
            
            // query the database for all customer information
            String getData="SELECT * FROM customers2";
            rs= statement.executeQuery(getData);
        } catch (Exception ex) {
            Logger.getLogger(DeleteCustomer.class.getName()).log(Level.SEVERE, null, ex);
        }
     
       
   
            try {
               
                while(rs.next()){
                   // compare entered phone number to phone numbers retreived from the database
                   // if it finds a match it displays a window that request confirmation to delete customer 
                   // when yes option is selected, the record is deleted
                    if (rs.getString(8).equalsIgnoreCase(EnteredPhone)){
                        String message = "Are you sure you want to delete \"" + rs.getString(2)+" "+
                                rs.getString(3)+"\"?";
                        int response = JOptionPane.showConfirmDialog(null, message, "Confirm",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
  
    if (response == JOptionPane.YES_OPTION) {
      // YES OPTION CODE
      String DeleteQuery = "DELETE FROM customers2 WHERE Phone ="+EnteredPhone;
       statement.executeUpdate(DeleteQuery);
       JOptionPane.showMessageDialog(null,"Customer Deleted Successfully" );
       phone.setText("");
    } 
                        
                    }
                    
                    
                }  
            } catch (SQLException ex) {
                Logger.getLogger(DeleteCustomer.class.getName()).log(Level.SEVERE, null, ex);
                    }
           
      
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     *
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField phone;
    // End of variables declaration//GEN-END:variables
}
